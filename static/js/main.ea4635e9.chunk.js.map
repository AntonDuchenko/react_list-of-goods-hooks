{"version":3,"sources":["variables/variables.ts","components/GoodsList/GoodsList.tsx","App.tsx","services/preparedListOfGoods/preparedListOfGoods.tsx","index.tsx"],"names":["goodsFromServer","SORT_METHOD_ALPHABET","SORT_METHOD_LENGTH","GoodsList","goods","map","good","App","useState","sortField","setSortField","reversed","setReversed","visibleGoods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","prepareListOfGoods","className","onClick","type","cn","ReactDOM","render","document","getElementById"],"mappings":"gPAAaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAuB,WACvBC,EAAqB,S,WCVrBC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,SCOjBC,EAAgB,WAC3B,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACMC,ECZD,SACLT,EACAK,EACAE,GAEA,IAAMG,EAAa,YAAOV,GAqB1B,OAnBIK,GACFK,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKR,EACH,OAAOe,EAAME,cAAcD,GAE7B,KAAKf,EACH,OAAOc,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXR,GACFG,EAAcM,UAGTN,EDbHO,CAAmBrB,EAAiBS,EAAWE,GAOnD,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMb,EAAaT,IAC5BuB,KAAK,SACLF,UAAS,yBAAoBG,IAAG,CAAE,WAAYhB,IAAcR,KAH9D,iCAQA,wBACEsB,QAAS,kBAAMb,EAAaR,IAC5BsB,KAAK,SACLF,UAAS,4BAAuBG,IAAG,CAAE,WAAYhB,IAAcP,KAHjE,4BAQA,wBACEqB,QAAS,kBAAMX,GAAaD,IAC5Ba,KAAK,SACLF,UAAS,4BAAuBG,IAAG,CAAE,YAAad,KAHpD,sBAQEF,GAAaE,IACb,wBACEY,QAlCI,WACZb,EAAa,IACbE,GAAY,IAiCJY,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,cAAC,EAAD,CAAWlB,MAAOS,QE5DxBa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ea4635e9.chunk.js","sourcesContent":["export const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const SORT_METHOD_ALPHABET = 'alphabet';\nexport const SORT_METHOD_LENGTH = 'length';\n","interface Props {\n  goods: string[],\n}\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li data-cy=\"Good\" key={good}>\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport {\n  prepareListOfGoods,\n} from './services/preparedListOfGoods/preparedListOfGoods';\nimport {\n  SORT_METHOD_ALPHABET,\n  SORT_METHOD_LENGTH,\n  goodsFromServer,\n} from './variables/variables';\nimport { GoodsList } from './components/GoodsList/GoodsList';\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState('');\n  const [reversed, setReversed] = useState(false);\n  const visibleGoods\n    = prepareListOfGoods(goodsFromServer, sortField, reversed);\n\n  const reset = () => {\n    setSortField('');\n    setReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_METHOD_ALPHABET)}\n          type=\"button\"\n          className={`button is-info ${cn({ 'is-light': sortField !== SORT_METHOD_ALPHABET })}`}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_METHOD_LENGTH)}\n          type=\"button\"\n          className={`button is-success ${cn({ 'is-light': sortField !== SORT_METHOD_LENGTH })}`}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setReversed(!reversed)}\n          type=\"button\"\n          className={`button is-warning ${cn({ 'is-light': !reversed })}`}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reversed) && (\n          <button\n            onClick={reset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodsList goods={visibleGoods} />\n    </div>\n  );\n};\n","import {\n  SORT_METHOD_ALPHABET,\n  SORT_METHOD_LENGTH,\n} from '../../variables/variables';\n\nexport function prepareListOfGoods(\n  goods: string[],\n  sortField: string,\n  reversed: boolean,\n): string[] {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_METHOD_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_METHOD_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}